----------------------------------------------------------
Class definitions

--  EachOf - "Each Of"
    A TripleExpression composed of one or more sub-expressions, all of which must match.
        rdfs:subClassOf shex:TripleExpression 

--  NodeConstraint - "Node Constraint"
    A constraint on the type or value of an RDF Node.
        rdfs:subClassOf shex:ShapeExpression 

--  Shape - "Shape Or"
    A shapes schema is captured in a Schema object where shapes is a mapping
    from shape label to shape expression.
        rdfs:subClassOf shex:ShapeExpression 

--  Schema - "Schema"
    A Schema contains the set of shapes, used for matching a focus node.

--  TripleConstraint - "Triple Constraint"
    A constraint on a triple having a specific predicate and optionally a shape
    expression used for matching values.
        rdfs:subClassOf shex:TripleExpression 

--  TripleExpression - "Triple Expression"
    The abstract class of Triple Expressions.

----------------------------------------------------------
Property definitions

--  datatype = "datatype"
    A datatype constraint.
        rdfs:range rdfs:Datatype
        rdfs:domain shex:NodeConstraint 

--  expression - "expression"
    Expression associated with the TripleExpression.
	rdfs:range shex:TripleExpression
	rdfs:domain shex:Shape <Paste>

--  expressions - "expressions"
    List of 2 or more expressions associated with the TripleExpression.
        rdfs:range shex:TripleExpression
        rdfs:domain Union of shex:EachOf shex:OneOf 

--  languageTag = "language tag"
    The value used to match the language tag of a language-tagged string.
        rdfs:range xsd:string
        rdfs:domain shex:Language 

--  max = "maximum cardinality"
    Maximum number of times this TripleExpression may match; -1 for “*”
        rdfs:range xsd:integer
        rdfs:domain Union of shex:EachOf shex:OneOf shex:TripleConstraint 

--  min = "minimum cardinality"
    Minimum number of times this TripleExpression may match.
        rdfs:range xsd:integer
        rdfs:domain Union of shex:EachOf shex:OneOf shex:TripleConstraint 

--  maxinclusive = "max inclusive"
    An atomic property that contains a single number that is the maximum valid
    value (inclusive).
        rdfs:subPropertyOf shex:numericFacet
        rdfs:range Union of xsd:integer xsd:decimal xsd:double 
        rdfs:domain shex:NodeConstraint 

--  mininclusive = "min inclusive"
    An atomic property that contains a single number that is the minimum valid
    value (inclusive).
        rdfs:subPropertyOf shex:numericFacet
        rdfs:range Union of xsd:integer xsd:decimal xsd:double 
        rdfs:domain shex:NodeConstraint 

--  nodeKind = "node kind"
    Restriction on the kind of node matched; restricted to the defined
    instances of NodeKind. One of shex:iri, shex:bnode, shex:literal, or
    shex:nonliteral.
        rdfs:range shex:NodeKind
        rdfs:domain shex:NodeConstraint 

--  numericFacet
    Abstract property of numeric facets on a NodeConstraint.
        rdfs:subPropertyOf shex:xsFacet 

--  predicate = "predicate"
    The predicate of a TripleConstraint or Annotation.
        rdfs:range rdfs:Resource
        rdfs:domain Union of shex:Annotation shex:TripleConstraint 

--  shapeExpr = "shape expression"
    Shape Expression referenced by this shape.
        rdfs:range shex:ShapeExpression
        rdfs:domain shex:ShapeNot 

--  shapes = "shapes"
    Shapes in this Schema.
        rdfs:range shex:ShapeExpression
        rdfs:domain shex:Schema 

--  start = "start"
    A ShapeExpression matched against the focus node prior to any other mapped
    expressions.
        rdfs:range shex:ShapeExpression
        rdfs:domain shex:Schema 

--  valueExpr = "value expression"
    A ShapeExpression used for matching the object (or subject if inverted) of
    a TripleConstraint.
	rdfs:range shex:ShapeExpression
	rdfs:domain shex:TripleConstraint <Paste>

--  values = "values"
    A value restriction on a NodeConstraint.
        rdfs:range Union of rdfs:Resource shex:Language shex:Stem shex:StemRange 
        rdfs:domain shex:NodeConstraint 

----------------------------------------------------------
Instance definitions

--  bnode = "bnode"
    Requires node to be a Blank Node

--  iri = "iri"
    Requires node to be an IRI

--  literal = "literal"
    Requires node to be an rdf:Literal

--  nonliteral = "nonliteral"
    Requires node to be a Blank Node or IRI

id
shapeExprLabel
ObjectValue
ObjectLiteral
value
language
type
